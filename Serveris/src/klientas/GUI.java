package klientas;


import ds.AutoJudejimas;
import ds.Kryptys;
import ds.Labirintas;
import ds.Taskas;

import java.awt.Color;
import vw.Apie;
import vw.KiekPaejoTaskas;
import vw.LabirintoInfo;
import vw.LabirintoIvedimas;
import vw.Pvz;
import vw.SpalvuNustatymas;
import vw.taskoPadetis4;

import java.util.ArrayList;

/**
 *
 * @author Simona
 */
public class GUI extends javax.swing.JFrame {
    AutoJudejimas jud;
    Labirintas l;
    Klientas mainas;
    
    ArrayList<String> klientu_nikai;

    public GUI(Klientas kl) {
        mainas = kl;
        
        
        initComponents();
        p.grabFocus();
        
        //Kada zinomi matmenys - kuriamas labirintas
        l = new Labirintas(4, 6);
        //sienos pagal nutylejima, ju gali ir nebuti
        l.keistiSiena(0, 0, Kryptys.DESINE);
        l.keistiSiena(1, 1, Kryptys.KAIRE);
        l.keistiSiena(1, 1, Kryptys.APACIA);
        l.keistiSiena(2, 1, Kryptys.APACIA);
        l.keistiSiena(1, 4, Kryptys.KAIRE);
        l.keistiSiena(3, 2, Kryptys.DESINE);
        l.keistiSiena(2, 1, Kryptys.APACIA);
        //labirinta priskiriam piesinys objektui
        p.setL(l);
        //labirinte sukuriame nauja taska
        l.pridetiTaska("AS", 0, 0);
        
        koordinaciuSiuntimas();
        
        //butu galima sukurti ir daugiau tasku
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        p = new vw.Piesinys();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Labirintas");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        p.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                pMouseMoved(evt);
            }
        });
        p.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pMouseClicked(evt);
            }
        });
        p.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout pLayout = new javax.swing.GroupLayout(p);
        p.setLayout(pLayout);
        pLayout.setHorizontalGroup(
            pLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        pLayout.setVerticalGroup(
            pLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 204, Short.MAX_VALUE)
        );

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton1.setText("SEND");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jMenu1.setText("Valdymas");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Kurti nauja labirinta");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setText("Nurodyti tasko padeti");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem8.setText("Automatinis judejimas");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem8);

        jMenuItem9.setText("Sustabdyti judejima");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem9);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Baigti darba");
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Redaguoti");

        jCheckBoxMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("Redaguoti");
        jMenu2.add(jCheckBoxMenuItem1);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Keisti spalva");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuItem7.setText("Labirinto informacija");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem7);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem5.setText("Apie");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuItem6.setText("Fono spalva");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem6);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(p, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(p, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField1)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        //JDialog tipo lango kvietimas
        LabirintoIvedimas iv = new LabirintoIvedimas(this, true);
        iv.setVisible(true);
        int la = iv.auks;
        int lp = iv.plot;
        //Kada zinomi matmenys - kuriamas labirintas
        l = new Labirintas(la, lp);
        //sienos pagal nutylejima, ju gali ir nebuti
        l.keistiSiena(0, 0, Kryptys.DESINE);
        l.keistiSiena(1, 1, Kryptys.KAIRE);
        l.keistiSiena(1, 1, Kryptys.APACIA);
        l.keistiSiena(2, 1, Kryptys.APACIA);
        l.keistiSiena(1, 4, Kryptys.KAIRE);
        l.keistiSiena(3, 2, Kryptys.DESINE);
        l.keistiSiena(2, 1, Kryptys.APACIA);
        //labirinta priskiriam piesinys objektui
        p.setL(l);
        //labirinte sukuriame nauja taska
        l.pridetiTaska("AAAAAAAAAAAA", 0, 0);
        
        //butu galima sukurti ir daugiau tasku
        this.repaint();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        if(l != null){
            //reiketu isvesti langa, kuriame leidziama pasirinkti kurioje eiluteje ir kuriame stulpelyje yra taskas

            taskoPadetis4 iv = new taskoPadetis4(this, true);
            iv.Parametrai(l.getAukstis(), l.getPlotis());
            iv.setVisible(true);

            l.KeistiTaskoVieta(0, iv.PasirinktaEil, iv.PasirinktasStulp);
        }
        //butu gerai, jei panaudotumete JComboBox, ir taip vartotojas galetu pasirinkti eilutes ar stulpelio numeri tik is galimu reiksmiu
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void pMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pMouseClicked
        //tikrina ar checkbox meniu yra ijungtas ar ne
        if (jCheckBoxMenuItem1.isSelected()) {
            int x = evt.getX();
            int y = evt.getY();
            int mastelis = p.m;
            int j = x / mastelis;
            int i = y / mastelis;
                //Langelis dabartinis = (l.getLangeliai())[i][j];
                Kryptys kr;
            //cia pasiziuri kiek nutolusi pele nuo langeliu sienu
            int ats_iki_vet_sien = x % mastelis;
            int ats_iki_hor_sien = y % mastelis;
            //atimama puse langeliu ir imamas moduli tam, kad butu aisku kiek nuo vidurio nutole, 
            //taip aiskiau atrinti ar arciau kaires ar desines ir pan
            if (Math.abs(ats_iki_vet_sien - mastelis / 2)
                    > Math.abs(ats_iki_hor_sien - mastelis / 2)) {
                //vertikali siena
                    if (ats_iki_vet_sien < mastelis / 2) {
                        kr = Kryptys.KAIRE;
                    } else {
                        kr = Kryptys.DESINE;
                    }
            } else {
                //horizontali siena
                    if (ats_iki_hor_sien < mastelis / 2) {
                        kr = Kryptys.VIRSUS;
                    } else {
                        kr = Kryptys.APACIA;
                    }
            }
            l.keistiSiena(i, j, kr);
            this.repaint();
        }
    }//GEN-LAST:event_pMouseClicked

    private void pMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pMouseMoved
        if (l != null && jCheckBoxMenuItem1.isSelected()) {
            //vedziojant su pele jau butu galima nustatineti ties kuria siena yra ir kuriuo langeliu
            //tada ta langeli ir krypti butu galima paduoti piesimui ir jis atvaizduotu kuria siena jus ruosiates salinti/prideti
            int x = evt.getX();
            int y = evt.getY();
            int mastelis = p.m;
            int j = x / mastelis;
            int i = y / mastelis;
             Kryptys kr;
            //cia pasiziuri kiek nutolusi pele nuo langeliu sienu
            int ats_iki_vet_sien = x % mastelis;
            int ats_iki_hor_sien = y % mastelis;
            //atimama puse langeliu ir imamas moduli tam, kad butu aisku kiek nuo vidurio nutole, 
            //taip aiskiau atrinti ar arciau kaires ar desines ir pan
            if (Math.abs(ats_iki_vet_sien - mastelis / 2)
                    > Math.abs(ats_iki_hor_sien - mastelis / 2)) {
                //vertikali siena
                    if (ats_iki_vet_sien < mastelis / 2) {
                        kr = Kryptys.KAIRE;
                    } else {
                        kr = Kryptys.DESINE;
                    }
            } else {
                //horizontali siena
                    if (ats_iki_hor_sien < mastelis / 2) {
                        kr = Kryptys.VIRSUS;
                    } else {
                        kr = Kryptys.APACIA;
                    }
            }
            
            if(i>=0 && i< l.getAukstis() && j>=0 &&j<l.getPlotis()){
                 
                 p.dabartinis = (l.getLangeliai())[i][j];
                 p.dabartinio_kryptis=kr;
            } else {
                p.dabartinis = null;
            }
            
            this.repaint();
           
        }
    }//GEN-LAST:event_pMouseMoved

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        Apie ap = new Apie();
        ap.setVisible(true);
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        SpalvuNustatymas sn = new SpalvuNustatymas(this, true);
        sn.PrimeColors(p.s1, p.s2, p.s3);
        sn.setVisible(true);
        Color s1 = sn.sp1;
        Color s2 = sn.sp2;
        Color s3 = sn.sp3;
        p.s1 = s1;
        p.s2 = s2;
        p.s3 = s3;
        this.repaint();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        //pavyzdys kaip galima sukurtoje formoje is karto nuskaityti spalvas ir jas paduoti i nurodyta piesini
        Pvz asd = new Pvz();
        asd.rodyti(p);
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void pKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pKeyReleased
        //su rodykliu klavisais valdomas taskas, butu gerai, 
        //jei pridetumete ir antro tasko valdyma kitas klavisais, kad matyciau, jog suprantat
        switch (evt.getKeyCode()) {
            case 38:
                l.getTaskai().get(0).eik(Kryptys.VIRSUS);
                break;
            case 39:
                l.getTaskai().get(0).eik(Kryptys.DESINE);
                break;
            case 40:
                l.getTaskai().get(0).eik(Kryptys.APACIA);
                break;
            case 37:
                l.getTaskai().get(0).eik(Kryptys.KAIRE);
                break;
        }
        
        
        if(mainas != null){
            mainas.siustiZinuteIServeri("tp:" + l.getTaskai().get(0).vieta.getEil()+":"+l.getTaskai().get(0).vieta.getSt());
        }
        
        if(l.taskai.size()>1){
            
        }
        this.repaint();
    }//GEN-LAST:event_pKeyReleased

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        if(l != null){
            LabirintoInfo ev = new LabirintoInfo(this, true);
            ev.LabirintoIvedimas(l);
            ev.setVisible(true);
        }
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        if(l != null){
            jud = new AutoJudejimas();
            jud.ParametruIvedimas(l, 0, p);
        }
        
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        if(jud.isAlive()){
            jud.interrupt();
            KiekPaejoTaskas langas = new KiekPaejoTaskas(this, true, jud.KiekPaejo());
            langas.setVisible(true);
        }
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        zinutesSiuntimas();
        jTextArea1.append("AS: " + jTextField1.getText() + "\n");
        jTextField1.removeAll();
        jTextField1.setText("");
        p.grabFocus();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        if (evt.getKeyCode() == 10) {
            if(jTextField1.getText() != ""){
                zinutesSiuntimas();
                jTextArea1.append("AS: " + jTextField1.getText() + "\n");
                jTextField1.removeAll();
                jTextField1.setText("");
            }
            p.grabFocus();
        }
    }//GEN-LAST:event_jTextField1KeyReleased

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if(mainas != null){
            mainas.siustiZinuteIServeri("out:");
            p.grabFocus();
        }
    }//GEN-LAST:event_formWindowClosing

    
    
    public void pridetiKlienta(String name, int x, int y){
        l.pridetiTaska(name, x, y);
        this.repaint();
    }
    
    public void pasalintiKlienta(String name){
        String vardas = name;
        l.SalintiTaska(vardas);
        this.repaint();
    }
    
    public void rodytiZinute(String zinute){
        jTextArea1.append(zinute +"\n");
    }
    
    private void zinutesSiuntimas(){
        if(mainas != null){
            mainas.siustiZinuteIServeri("v:" + jTextField1.getText());
            p.grabFocus();
        }
    }
    
    private void koordinaciuSiuntimas(){
        if(mainas != null){
            Taskas t = l.taskai.get(0);
            String txt = "tp:" + t.vieta.getEil() + ":" + t.vieta.getSt();
            mainas.siustiKoordinatesIServeri(txt);
            p.grabFocus();
        }
    }
    
    public void taskoPadetis(String name, int a, int p){
        String vardas = name;
        l.KeistiTaskoVietaPagalVarda(vardas, a, p);
        this.repaint();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI(null).setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private vw.Piesinys p;
    // End of variables declaration//GEN-END:variables
}
