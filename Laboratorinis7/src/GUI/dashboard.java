/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.FileReader;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Properties;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import laboratorinis7.Expenses;
import laboratorinis7.ExpensesJpaController;
import laboratorinis7.Taxuser;

/**
 *
 * @author Vartotojas
 */
public class dashboard extends javax.swing.JFrame {

    /**
     * Creates new form dashboard
     */
    public dashboard() {
        initComponents();
    }
    
    private static boolean tikrinimas = true;
    
    public DefaultTableModel table = new DefaultTableModel() {
        public boolean isCellEditable(int rowIndex, int mColIndex) {
            return false;
        };
    };
    
    DateFormat format = new SimpleDateFormat("yyyy-MM-dd HH:mm");
    public Date dateFrom;
    public Date dateTo;
    public int filteredUser;
    
    void setExpenses()
    {
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("Laboratorinis7PU");
        ExpensesJpaController ajc = new ExpensesJpaController(emf);
        try {            
            table.setRowCount(0);
            List all = ajc.findExpensesEntities();
            System.out.println(ajc.getExpensesCount());
            for (int i = 1; i <= ajc.getExpensesCount(); i++){
               
                if(this.dateFrom != null && this.dateTo != null) 
                {
                    System.out.println("ahha");
                    Date aDate = null;
                    try 
                    {
                        aDate = ajc.findExpenses(i).getDatetime();
                    }catch (Exception ex) {
                        System.out.println(ex);
                    }
                    if(aDate.compareTo(this.dateFrom) > 0 && aDate.compareTo(this.dateTo) < 0) {
                        if(filteredUser != 0) {
                            if(filteredUser == ajc.findExpenses(i).getTaxuser().getId())
                            {
                                
                            Object[] newExpenses = {ajc.findExpenses(i).getTaxuser().getFirstname(), ajc.findExpenses(i).getDatetime(), ajc.findExpenses(i).getTitle(), ajc.findExpenses(i).getMoney(),i+1};
                                table.addRow(newExpenses);
                            }
                        } else {
                            Object[] newExpenses = {ajc.findExpenses(i).getTaxuser().getFirstname(), ajc.findExpenses(i).getDatetime(), ajc.findExpenses(i).getTitle(), ajc.findExpenses(i).getMoney(),i+1};
                            table.addRow(newExpenses);  
                        }
                    }
                }
                else {                    
                    if(filteredUser != 0) {
                        
                        if(filteredUser == ajc.findExpenses(i).getTaxuser().getId())
                        {
                            Object[] newExpenses = {ajc.findExpenses(i).getTaxuser().getFirstname(), ajc.findExpenses(i).getDatetime(), ajc.findExpenses(i).getTitle(), ajc.findExpenses(i).getMoney(),i+1};
                            table.addRow(newExpenses);
                            System.out.print("asdasdds /" + newExpenses.getClass().toString());
                        }
                    } 
                    else {
                        System.out.print(i);
                        Object[] newExpenses = {ajc.findExpenses(i).getTaxuser().getFirstname(), ajc.findExpenses(i).getDatetime(), ajc.findExpenses(i).getTitle(), ajc.findExpenses(i).getMoney(),i+1};
                        table.addRow(newExpenses);  
                        
                    }
                }
            }
            jTable1.setModel(table);
        } catch (Exception e) {
            
        } 
        System.out.println(table.getDataVector());
        this.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        Laboratorinis7PUEntityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("Laboratorinis7PU").createEntityManager();
        taxuserQuery = java.beans.Beans.isDesignTime() ? null : Laboratorinis7PUEntityManager.createQuery("SELECT t FROM Taxuser t");
        taxuserList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : taxuserQuery.getResultList();
        expensesQuery = java.beans.Beans.isDesignTime() ? null : Laboratorinis7PUEntityManager.createQuery("SELECT e FROM Expenses e");
        expensesList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : expensesQuery.getResultList();
        expensesQuery1 = java.beans.Beans.isDesignTime() ? null : Laboratorinis7PUEntityManager.createQuery("SELECT e FROM Expenses e");
        expensesList1 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : expensesQuery1.getResultList();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        dateFromField = new javax.swing.JTextField();
        dateToField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem2 = new javax.swing.JCheckBoxMenuItem();

        jLabel6.setText("2000-10-10 10:10");

        jLabel8.setText("Example:");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, expensesList1, jTable1);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${taxuser}"));
        columnBinding.setColumnName("Taxuser");
        columnBinding.setColumnClass(laboratorinis7.Taxuser.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${datetime}"));
        columnBinding.setColumnName("Datetime");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${title}"));
        columnBinding.setColumnName("Title");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${money}"));
        columnBinding.setColumnName("Money");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jTable1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jTable1AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(jTable1);

        org.jdesktop.swingbinding.JComboBoxBinding jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, taxuserList, jComboBox1);
        bindingGroup.addBinding(jComboBoxBinding);

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel1.setText("User:");

        jLabel2.setText("Date from:");

        jLabel3.setText("Date to:");

        jButton1.setText("Show expences");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setText("Example:");

        jLabel5.setText("2000-10-10 10:10");

        jLabel7.setText("2000-10-10 10:10");

        jLabel9.setText("Example:");

        jMenu1.setText("Add");

        jMenuItem1.setText("Add User");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Add Expences");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu3.setText("Show");

        jMenuItem3.setText("Show Users data");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem3);

        jMenuItem4.setText("Show All Expenses");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem4);

        jMenuBar1.add(jMenu3);

        jMenu2.setText("Language");

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("Lietuvių kalba");
        jCheckBoxMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jCheckBoxMenuItem1);

        jCheckBoxMenuItem2.setSelected(true);
        jCheckBoxMenuItem2.setText("English");
        jCheckBoxMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jCheckBoxMenuItem2);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(dateFromField, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel5)))
                                .addGap(36, 36, 36)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel9))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jLabel7))
                                    .addComponent(dateToField, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateFromField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateToField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        AddUser au = new AddUser(this);
        au.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        ShowUsers su = new ShowUsers();
        su.setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        AddExpenses ae = new AddExpenses();
        ae.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        ShowAllExpenses sae = new ShowAllExpenses();
        sae.setVisible(true);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
                // isvedimas
        Expenses ex = new Expenses();
        ex.setTaxuser((Taxuser)jComboBox1.getSelectedItem());
        try{
            if(dateFromField.getText().isEmpty() || dateToField.getText().isEmpty()) {
                this.dateFrom = null;
                this.dateTo = null;
            } else {
                this.dateFrom = format.parse(dateFromField.getText());
                this.dateTo = format.parse(dateToField.getText());              
            }
            this.filteredUser = ex.getTaxuser().getId();
            setExpenses();
        }catch(Exception e)
        {
            
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jTable1AncestorAdded
        
        table.addColumn("Name");
        table.addColumn("Date");
        table.addColumn("Title");
        table.addColumn("Money");
        table.addColumn("ID");
        jTable1.getTableHeader().setReorderingAllowed(false);
        
        java.awt.Frame thisFrame = this;
        jTable1.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2) {
                    JTable target = (JTable)e.getSource();
                    int row = target.getSelectedRow();
                    int selectedActivity = (int) jTable1.getModel().getValueAt(row, 4) - 1;
                    
                    AddExpenses aa = new AddExpenses();
                    aa.setValues(selectedActivity);
                    aa.setVisible(true);
                    setExpenses();
                }
            }
        });
        setExpenses();
    }//GEN-LAST:event_jTable1AncestorAdded

    private void jCheckBoxMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem1ActionPerformed
        Properties pr = new Properties();
        try{
            FileReader fr = new FileReader("src\\META-INF\\Texts.properties");
            pr.load(fr);
            jLabel1.setText(pr.getProperty("text1"));
            
            jMenu1.setText(pr.getProperty("menu1"));
            jMenuItem1.setText(pr.getProperty("menu1item1"));
            jMenuItem2.setText(pr.getProperty("menu1item2"));
            jMenuItem3.setText(pr.getProperty("menu2item1"));
            jMenuItem4.setText(pr.getProperty("menu2item2"));
            jMenu3.setText(pr.getProperty("menu2"));
            jMenu2.setText(pr.getProperty("menu3"));
            jCheckBoxMenuItem1.setText(pr.getProperty("menu3item1"));
            jCheckBoxMenuItem2.setText(pr.getProperty("menu3item2"));
            jLabel1.setText(pr.getProperty("text1"));
            jLabel2.setText(pr.getProperty("text2"));
            jLabel3.setText(pr.getProperty("text3"));
            jLabel4.setText(pr.getProperty("example"));
            jLabel9.setText(pr.getProperty("example"));
            jButton1.setText(pr.getProperty("button1"));
            
            
            tikrinimas = true;
        }catch(Exception e)
        {
            
        }
    }//GEN-LAST:event_jCheckBoxMenuItem1ActionPerformed

    private void jCheckBoxMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem2ActionPerformed
                Properties pr = new Properties();
        try{
            FileReader fr = new FileReader("src\\META-INF\\Texts_en_GB.properties");
            pr.load(fr);
            jLabel1.setText(pr.getProperty("text1"));
            
            jMenu1.setText(pr.getProperty("menu1"));
            jMenuItem1.setText(pr.getProperty("menu1item1"));
            jMenuItem2.setText(pr.getProperty("menu1item2"));
            jMenuItem3.setText(pr.getProperty("menu2item1"));
            jMenuItem4.setText(pr.getProperty("menu2item2"));
            jMenu3.setText(pr.getProperty("menu2"));
            jMenu2.setText(pr.getProperty("menu3"));
            jCheckBoxMenuItem1.setText(pr.getProperty("menu3item1"));
            jCheckBoxMenuItem2.setText(pr.getProperty("menu3item2"));
            jLabel1.setText(pr.getProperty("text1"));
            jLabel2.setText(pr.getProperty("text2"));
            jLabel3.setText(pr.getProperty("text3"));
            jLabel4.setText(pr.getProperty("example"));
            jLabel9.setText(pr.getProperty("example"));
            jButton1.setText(pr.getProperty("button1"));
            
            
            tikrinimas = true;
        }catch(Exception e)
        {
            
        }
    }//GEN-LAST:event_jCheckBoxMenuItem2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new dashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.persistence.EntityManager Laboratorinis7PUEntityManager;
    private javax.swing.JTextField dateFromField;
    private javax.swing.JTextField dateToField;
    private java.util.List<laboratorinis7.Expenses> expensesList;
    private java.util.List<laboratorinis7.Expenses> expensesList1;
    private javax.persistence.Query expensesQuery;
    private javax.persistence.Query expensesQuery1;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private java.util.List<laboratorinis7.Taxuser> taxuserList;
    private javax.persistence.Query taxuserQuery;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
